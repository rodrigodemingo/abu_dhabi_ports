<?php
    if (function_exists('vc_map')) {
		global $VISUAL_COMPOSER_EXTENSIONS;
        vc_map( array(
            "name"                          		=> __( "TS Image Full", "ts_visual_composer_extend" ),
            "base"                          		=> "TS_VCSC_Image_Full",
            "icon"                          		=> "icon-wpb-ts_vcsc_image_full",
            "class"                         		=> "ts_vcsc_main_image_full",
            "category"                      		=> __( "VC Extensions", "ts_visual_composer_extend" ),
            "description" 		            		=> __("Place a full width image", "ts_visual_composer_extend"),
            "admin_enqueue_js"            			=> "",
            "admin_enqueue_css"           			=> "",
            "params"                        		=> array(
                // Image Selection and Breakout
                array(
                    "type"                  		=> "seperator",
                    "heading"               		=> __( "", "ts_visual_composer_extend" ),
                    "param_name"            		=> "seperator_1",
					"value"							=> "",
                    "seperator"                 	=> "Image Selection",
                    "description"           		=> __( "", "ts_visual_composer_extend" )
                ),
                array(
                    "type"                  		=> "attach_image",
					"holder" 						=> ($VISUAL_COMPOSER_EXTENSIONS->TS_VCSC_EditorImagePreview == "true" ? "img" : ""),
                    "heading"               		=> __( "Image", "ts_visual_composer_extend" ),
                    "param_name"            		=> "image",
					"class"							=> "ts_vcsc_holder_image",
                    "value"                 		=> "",
                    "admin_label"           		=> ($VISUAL_COMPOSER_EXTENSIONS->TS_VCSC_EditorImagePreview == "true" ? false : true),
                    "description"           		=> __( "Select the image you want to use.", "ts_visual_composer_extend" )
                ),
				array(
					"type"             	 				=> "switch",
					"heading"			    		=> __( "Add Custom ALT Attribute", "ts_visual_composer_extend" ),
					"param_name"		    		=> "attribute_alt",
					"value"				    		=> "false",
					"on"							=> __( 'Yes', "ts_visual_composer_extend" ),
					"off"							=> __( 'No', "ts_visual_composer_extend" ),
					"style"							=> "select",
					"design"						=> "toggle-light",
                    "description"       			=> __( "Switch the toggle if you want to add a custom ALT attribute value, otherwise file name will be set.", "ts_visual_composer_extend" ),
                    "dependency"        			=> ""
				),
                array(
                    "type"                  		=> "textfield",
                    "heading"               		=> __( "Enter ALT Value", "ts_visual_composer_extend" ),
                    "param_name"            		=> "attribute_alt_value",
                    "value"                 		=> "",
                    "description"           		=> __( "Enter a custom value for the ALT attribute for this image.", "ts_visual_composer_extend" ),
                    "dependency"            		=> array( 'element' => "attribute_alt", 'value' => 'true' )
                ),
				array(
					"type"                  		=> "nouislider",
					"heading"               		=> __( "Full Width Breakouts", "ts_visual_composer_extend" ),
					"param_name"            		=> "break_parents",
					"value"                 		=> "0",
					"min"                   		=> "0",
					"max"                   		=> "99",
					"step"                  		=> "1",
					"unit"                  		=> '',
					"admin_label"           		=> true,
					"description"           		=> __( "Define the number of parent containers the image should attempt to break away from.", "ts_visual_composer_extend" ),
				),
				// Image Shapes
                array(
                    "type"                  		=> "seperator",
                    "heading"               		=> __( "", "ts_visual_composer_extend" ),
                    "param_name"            		=> "seperator_3",
					"value"							=> "",
                    "seperator"                 	=> "Image Shapes",
                    "description"           		=> __( "", "ts_visual_composer_extend" ),
					"group" 						=> "Image Effects",
                ),		
				array(
					"type"							=> "switch",
					"heading"           			=> __( "Use Top Shape", "ts_visual_composer_extend" ),
					"param_name"        			=> "svg_top_on",
					"value"             			=> "false",
					"on"							=> __( 'Yes', "ts_visual_composer_extend" ),
					"off"							=> __( 'No', "ts_visual_composer_extend" ),
					"style"							=> "select",
					"design"						=> "toggle-light",
					"description"       			=> __( "Switch the toggle if you want to apply a SVG shape to the top of the image.", "ts_visual_composer_extend" ),
					"dependency" 					=> "",
					"group" 						=> "Image Effects",
				),
				array(
					"type" 							=> "dropdown",
					"class" 						=> "",
					"heading" 						=> __( "Top SVG Shape", "ts_visual_composer_extend" ),
					"param_name" 					=> "svg_top_style",
					"value" 						=> $VISUAL_COMPOSER_EXTENSIONS->TS_VCSC_SVG_RowShapes_List,
					"description" 					=> __(""),
					"dependency" 					=> array(
						"element" 	=> "svg_top_on",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
				),
				array(
					"type"                  		=> "nouislider",
					"heading"               		=> __( "Top SVG Height", "ts_visual_composer_extend" ),
					"param_name"            		=> "svg_top_height",
					"value"                 		=> "100",
					"min"                   		=> "0",
					"max"                   		=> "300",
					"step"                  		=> "1",
					"unit"                  		=> 'px',
					"description" 					=> __(""),
					"dependency" 					=> array(
						"element" 	=> "svg_top_on",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
				),
				array(
					"type"							=> "switch",
					"heading"           			=> __( "Flip Top Shape", "ts_visual_composer_extend" ),
					"param_name"        			=> "svg_top_flip",
					"value"             			=> "false",
					"on"							=> __( 'Yes', "ts_visual_composer_extend" ),
					"off"							=> __( 'No', "ts_visual_composer_extend" ),
					"style"							=> "select",
					"design"						=> "toggle-light",
					"description"       			=> __( "Switch the toggle if you want to flip the top SVG shape.", "ts_visual_composer_extend" ),
					"dependency" 					=> array(
						"element" 	=> "svg_top_on",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
				),
                array(
                    "type"                  		=> "nouislider",
                    "heading"               		=> __( "Top SVG Position", "ts_visual_composer_extend" ),
                    "param_name"            		=> "svg_top_position",
                    "value"                 		=> "0",
                    "min"                   		=> "-300",
                    "max"                   		=> "300",
                    "step"                  		=> "1",
                    "unit"                  		=> 'px',
                    "description"           		=> __( "Define the exact position for the top SVG shape; you might have to adjust margins to avoid overlaps.", "ts_visual_composer_extend" ),
					"dependency" 					=> array(
						"element" 	=> "svg_top_on",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
                ),
				array(
					"type"              			=> "colorpicker",
					"heading"           			=> __( "Top SVG Color Main", "ts_visual_composer_extend" ),
					"param_name"        			=> "svg_top_color1",
					"value"            	 			=> "#ffffff",
					"description" 					=> __(""),
					"dependency" 					=> array(
						"element" 	=> "svg_bottom_on",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
				),
				array(
					"type"              			=> "colorpicker",
					"heading"           			=> __( "Top SVG Color Alternate", "ts_visual_composer_extend" ),
					"param_name"        			=> "svg_top_color2",
					"value"            	 			=> "#ededed",
					"description" 					=> __(""),
					"dependency" 					=> array(
						"element" 	=> "svg_top_style",
						"value" 	=> array("14", "16")
					),
					"group" 						=> "Image Effects",
				),
				array(
					"type"							=> "switch",
					"heading"           			=> __( "Use Bottom Shape", "ts_visual_composer_extend" ),
					"param_name"        			=> "svg_bottom_on",
					"value"             			=> "false",
					"on"							=> __( 'Yes', "ts_visual_composer_extend" ),
					"off"							=> __( 'No', "ts_visual_composer_extend" ),
					"style"							=> "select",
					"design"						=> "toggle-light",
					"description"       			=> __( "Switch the toggle if you want to apply a SVG shape to the bottom of the image.", "ts_visual_composer_extend" ),
					"dependency" 					=> "",
					"group" 						=> "Image Effects",
				),
				array(
					"type" 							=> "dropdown",
					"class" 						=> "",
					"heading" 						=> __( "Bottom SVG Shape", "ts_visual_composer_extend" ),
					"param_name" 					=> "svg_bottom_style",
					"value" 						=> $VISUAL_COMPOSER_EXTENSIONS->TS_VCSC_SVG_RowShapes_List,
					"description" 					=> __(""),
					"dependency" 					=> array(
						"element" 	=> "svg_bottom_on",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
				),
				array(
					"type"                  		=> "nouislider",
					"heading"               		=> __( "Bottom SVG Height", "ts_visual_composer_extend" ),
					"param_name"            		=> "svg_bottom_height",
					"value"                 		=> "100",
					"min"                   		=> "0",
					"max"                   		=> "300",
					"step"                  		=> "1",
					"unit"                  		=> 'px',
					"description" 					=> __(""),
					"dependency" 					=> array(
						"element" 	=> "svg_bottom_on",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
				),
				array(
					"type"							=> "switch",
					"heading"           			=> __( "Flip Bottom Shape", "ts_visual_composer_extend" ),
					"param_name"        			=> "svg_bottom_flip",
					"value"             			=> "false",
					"on"							=> __( 'Yes', "ts_visual_composer_extend" ),
					"off"							=> __( 'No', "ts_visual_composer_extend" ),
					"style"							=> "select",
					"design"						=> "toggle-light",
					"description"       			=> __( "Switch the toggle if you want to flip the bottom SVG shape.", "ts_visual_composer_extend" ),
					"dependency" 					=> array(
						"element" 	=> "svg_bottom_on",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
				),
                array(
                    "type"                  		=> "nouislider",
                    "heading"               		=> __( "Bottom SVG Position", "ts_visual_composer_extend" ),
                    "param_name"            		=> "svg_bottom_position",
                    "value"                 		=> "0",
                    "min"                   		=> "-300",
                    "max"                   		=> "300",
                    "step"                  		=> "1",
                    "unit"                  		=> 'px',
                    "description"           		=> __( "Define the exact position for the bottom SVG shape; you might have to adjust margins to avoid overlaps.", "ts_visual_composer_extend" ),
					"dependency" 					=> array(
						"element" 	=> "svg_bottom_on",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
                ),
				array(
					"type"              			=> "colorpicker",
					"heading"           			=> __( "Bottom SVG Color Main", "ts_visual_composer_extend" ),
					"param_name"        			=> "svg_bottom_color1",
					"value"            	 			=> "#ffffff",
					"description" 					=> __(""),
					"dependency" 					=> array(
						"element" 	=> "svg_bottom_on",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
				),
				array(
					"type"              			=> "colorpicker",
					"heading"           			=> __( "Bottom SVG Color Alternate", "ts_visual_composer_extend" ),
					"param_name"        			=> "svg_bottom_color2",
					"value"            	 			=> "#ededed",
					"description" 					=> __(""),
					"dependency" 					=> array(
						"element" 	=> "svg_bottom_style",
						"value" 	=> array("14", "16")
					),
					"group" 						=> "Image Effects",
				),
				// Image Effects
                array(
                    "type"                  		=> "seperator",
                    "heading"               		=> __( "", "ts_visual_composer_extend" ),
                    "param_name"            		=> "seperator_4",
					"value"							=> "",
                    "seperator"                 	=> "Image Effects",
                    "description"           		=> __( "", "ts_visual_composer_extend" ),
					"group" 						=> "Image Effects",
                ),				
				array(
					"type" 							=> "dropdown",
					"class" 						=> "",
					"heading" 						=> __( "Blur Strength", "ts_visual_composer_extend"),
					"param_name" 					=> "blur_strength",
					"value" 						=> array(
						__( "None", "ts_visual_composer_extend")					=> "",
						__( "Small Blur", "ts_visual_composer_extend")				=> "ts-background-blur-small",
						__( "Medium Blur", "ts_visual_composer_extend")				=> "ts-background-blur-medium",
						__( "Strong Blur", "ts_visual_composer_extend")				=> "ts-background-blur-strong",
					),
					"description" 					=> __("Define an optional blur strength for the image.", "ts_visual_composer_extend"),
					"admin_label"           		=> true,
					"dependency" 					=> "",
					"group" 						=> "Image Effects",
				),				
				array(
					"type"							=> "switch",
					"heading"           			=> __( "Raster Overlay", "ts_visual_composer_extend" ),
					"param_name"        			=> "raster_use",
					"value"             			=> "false",
					"on"							=> __( 'Yes', "ts_visual_composer_extend" ),
					"off"							=> __( 'No', "ts_visual_composer_extend" ),
					"style"							=> "select",
					"design"						=> "toggle-light",
					"description"       			=> __( "Switch the toggle if you want to use a raster overlay with the image.", "ts_visual_composer_extend" ),
					"dependency" 					=> "",
					"admin_label"           		=> true,
					"group" 						=> "Image Effects",
				),
				array(
					"type"              			=> "background",
					"heading"           			=> __( "Raster Type", "ts_visual_composer_extend" ),
					"param_name"        			=> "raster_type",
					"width"             			=> 200,
					"value"             			=> $this->TS_VCSC_Rasters_List,
					"encoding"          			=> "false",
					"asimage"						=> "false",
					"thumbsize"						=> 40,
					"description"       			=> __( "Select the raster pattern for the image effect.", "ts_visual_composer_extend" ),
					"dependency"            		=> array( 'element' => "raster_use", 'value' => 'true' ),
					"group" 						=> "Image Effects",
				),		
				array(
					"type"							=> "switch",
					"heading"           			=> __( "Color Overlay", "ts_visual_composer_extend" ),
					"param_name"        			=> "overlay_use",
					"value"             			=> "false",
					"on"							=> __( 'Yes', "ts_visual_composer_extend" ),
					"off"							=> __( 'No', "ts_visual_composer_extend" ),
					"style"							=> "select",
					"design"						=> "toggle-light",
					"description"       			=> __( "Switch the toggle if you want to use a color overlay with the image; will only work with browser with RGBA support.", "ts_visual_composer_extend" ),
					"admin_label"           		=> true,
					"dependency" 					=> "",
					"group" 						=> "Image Effects",
				),
				array(
					"type"              			=> "colorpicker",
					"heading"           			=> __( "Overlay Color", "ts_visual_composer_extend" ),
					"param_name"        			=> "overlay_color",
					"value"            	 			=> "rgba(30,115,190,0.25)",
					"description" 					=> __("Define the overlay color; use the alpha channel setting to define the opacity of the overlay."),
					"dependency" 					=> array(
						"element" 	=> "overlay_use",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
				),				
				array(
					"type"							=> "switch",
					"heading"           			=> __( "Horizontal (X) Movement", "ts_visual_composer_extend" ),
					"param_name"        			=> "movement_x_allow",
					"value"             			=> "false",
					"on"							=> __( 'Yes', "ts_visual_composer_extend" ),
					"off"							=> __( 'No', "ts_visual_composer_extend" ),
					"style"							=> "select",
					"design"						=> "toggle-light",
					"description"       			=> __( "Switch the toggle to have the image follow horizontal (x) movements.", "ts_visual_composer_extend" ),
					"dependency" 					=> "",
					"group" 						=> "Image Effects",
				),
				array(
					"type"                  		=> "nouislider",
					"heading"               		=> __( "Horizontal Ratio", "ts_visual_composer_extend" ),
					"param_name"            		=> "movement_x_ratio",
					"value"                 		=> "20",
					"min"                   		=> "0",
					"max"                   		=> "100",
					"step"                  		=> "1",
					"unit"                  		=> 'px',
					"description"           		=> __( "Define the ratio in pixels by how much the image is allowed to move horizontally.", "ts_visual_composer_extend" ),
					"dependency" 					=> array(
						"element" 	=> "movement_x_allow",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
				),
				array(
					"type"							=> "switch",
					"heading"           			=> __( "Vertical (Y) Movement", "ts_visual_composer_extend" ),
					"param_name"        			=> "movement_y_allow",
					"value"             			=> "false",
					"on"							=> __( 'Yes', "ts_visual_composer_extend" ),
					"off"							=> __( 'No', "ts_visual_composer_extend" ),
					"style"							=> "select",
					"design"						=> "toggle-light",
					"description"       			=> __( "Switch the toggle to have the image follow vertical (y) movements.", "ts_visual_composer_extend" ),
					"dependency" 					=> "",
					"group" 						=> "Image Effects",
				),
				array(
					"type"                  		=> "nouislider",
					"heading"               		=> __( "Vertical Ratio", "ts_visual_composer_extend" ),
					"param_name"            		=> "movement_y_ratio",
					"value"                 		=> "20",
					"min"                   		=> "0",
					"max"                   		=> "100",
					"step"                  		=> "1",
					"unit"                  		=> 'px',
					"description"           		=> __( "Define the ratio in pixels by how much the image is allowed to move vertically.", "ts_visual_composer_extend" ),
					"dependency" 					=> array(
						"element" 	=> "movement_y_allow",
						"value" 	=> "true"
					),
					"group" 						=> "Image Effects",
				),				
				// Margin Settings
                array(
                    "type"                  		=> "seperator",
                    "heading"               		=> __( "", "ts_visual_composer_extend" ),
                    "param_name"            		=> "seperator_5",
					"value"							=> "",
                    "seperator"                 	=> "Image Margins",
                    "description"           		=> __( "", "ts_visual_composer_extend" ),
					"group" 						=> "Image Margins",
                ),
				array(
					"type"                  		=> "nouislider",
					"heading"               		=> __( "Margin: Left", "ts_visual_composer_extend" ),
					"param_name"            		=> "margin_left",
					"value"                 		=> "0",
					"min"                   		=> "-100",
					"max"                   		=> "100",
					"step"                  		=> "1",
					"unit"                  		=> 'px',
					"description"           		=> __( "If the image isn't exactly aligned, use left/right margins to adjust position.", "ts_visual_composer_extend" ),
					"group" 						=> "Image Margins",
				),
				array(
					"type"                  		=> "nouislider",
					"heading"               		=> __( "Margin: Right", "ts_visual_composer_extend" ),
					"param_name"            		=> "margin_right",
					"value"                 		=> "0",
					"min"                   		=> "-100",
					"max"                   		=> "100",
					"step"                  		=> "1",
					"unit"                  		=> 'px',
					"description"           		=> __( "If the image isn't exactly aligned, use left/right margins to adjust position.", "ts_visual_composer_extend" ),
					"group" 						=> "Image Margins",
				),
                array(
                    "type"                  		=> "nouislider",
                    "heading"               		=> __( "Margin: Top", "ts_visual_composer_extend" ),
                    "param_name"            		=> "margin_top",
                    "value"                 		=> "0",
                    "min"                   		=> "0",
                    "max"                   		=> "400",
                    "step"                  		=> "1",
                    "unit"                  		=> 'px',
                    "description"           		=> __( "Select the top margin for your image.", "ts_visual_composer_extend" ),
					"group" 						=> "Image Margins",
                ),
                array(
                    "type"                  		=> "nouislider",
                    "heading"               		=> __( "Margin: Bottom", "ts_visual_composer_extend" ),
                    "param_name"            		=> "margin_bottom",
                    "value"                 		=> "0",
                    "min"                   		=> "0",
                    "max"                   		=> "400",
                    "step"                  		=> "1",
                    "unit"                  		=> 'px',
                    "description"           		=> __( "Select the bottom margin for your image.", "ts_visual_composer_extend" ),
					"group" 						=> "Image Margins",
                ),
                // Other Settings
                array(
                    "type"                  		=> "seperator",
                    "heading"               		=> __( "", "ts_visual_composer_extend" ),
                    "param_name"            		=> "seperator_6",
					"value"							=> "",
                    "seperator"                 	=> "Other Settings",
                    "description"           		=> __( "", "ts_visual_composer_extend" ),
					"group" 						=> "Other Settings",
                ),
                array(
                    "type"                  		=> "textfield",
                    "heading"               		=> __( "Define ID Name", "ts_visual_composer_extend" ),
                    "param_name"            		=> "el_id",
                    "value"                 		=> "",
                    "description"           		=> __( "Enter an unique ID for the element.", "ts_visual_composer_extend" ),
					"group" 						=> "Other Settings",
                ),
                array(
                    "type"                  		=> "textfield",
                    "heading"               		=> __( "Extra Class Name", "ts_visual_composer_extend" ),
                    "param_name"            		=> "el_class",
                    "value"                 		=> "",
                    "description"           		=> __( "Enter a class name for the element.", "ts_visual_composer_extend" ),
					"group" 						=> "Other Settings",
                ),
                // Load Custom CSS/JS File
                array(
                    "type"                  		=> "load_file",
                    "heading"               		=> __( "", "ts_visual_composer_extend" ),
                    "param_name"            		=> "el_file",
                    "value"                 		=> "",
                    "file_type"             		=> "js",
                    "file_path"             		=> "js/ts-visual-composer-extend-element.min.js",
                    "description"           		=> __( "", "ts_visual_composer_extend" )
                ),
            )
        ));
    }
?>